name: Build and Release SubProject

on:
  push:
    tags:
      - 'cli-release*'  # 触发条件：当推送以 'cli-release' 开头的标签时触发
      - 'gui-release*'  # 触发条件：当推送以 'gui-release' 开头的标签时触发

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]  # 定义支持的平台
        subproject: [cli, gui]  # 需要构建的子项目

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. 根据标签选择性构建子项目
      - name: Build ${{ matrix.subproject }} for ${{ matrix.os }}
        run: |
          TAG_NAME=${GITHUB_REF##*/}  # 获取标签名（例如 'cli-release-v1.0.0'）

          echo "Building for tag: $TAG_NAME on ${{ matrix.os }}"

          # 根据标签前缀判断构建哪个子项目
          if [[ "$TAG_NAME" == cli-release* && "${{ matrix.subproject }}" == "cli" ]]; then
            cargo build --release --package png-chunk-msg-cli # 只构建 cli 子项目，以package中的name为准
          elif [[ "$TAG_NAME" == gui-release* && "${{ matrix.subproject }}" == "gui" ]]; then
            cargo build --release --package gui  # 只构建 gui 子项目
          else
            echo "Skipping build for $TAG_NAME on ${{ matrix.os }}."
          fi

      # 3 打包
      - name: Create Release Assets
        run: |
          # 创建发布文件夹
          mkdir -p release
          
          # 复制构建的文件到发布文件夹
          cp target/${{ matrix.os }}/release/${{ matrix.subproject }} release/
          
          # 压缩并创建发布包
          tar -czvf release/${{ matrix.subproject }}-${GITHUB_SHA}.tar.gz -C release ${{ matrix.subproject }}
      # 4.提交文件
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: release/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
